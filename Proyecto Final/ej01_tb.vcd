$date
	Wed Nov 18 18:14:25 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 8 ! program_byte [7:0] $end
$var wire 4 " oprnd [3:0] $end
$var wire 4 # instr [3:0] $end
$var reg 1 $ clk $end
$var reg 12 % counter12bit [11:0] $end
$var reg 1 & enCounter $end
$var reg 1 ' enFetch $end
$var reg 1 ( load $end
$var reg 1 ) reset $end
$scope module U1 $end
$var wire 1 $ clk $end
$var wire 12 * counter12bit [11:0] $end
$var wire 1 & enCounter $end
$var wire 1 ' enFetch $end
$var wire 1 ( load $end
$var wire 1 ) reset $end
$var wire 8 + program_byte [7:0] $end
$var wire 4 , oprnd [3:0] $end
$var wire 4 - instr [3:0] $end
$var wire 12 . PC [11:0] $end
$scope module U1 $end
$var wire 1 $ clk $end
$var wire 1 & enabled $end
$var wire 1 ( load $end
$var wire 12 / load_Data [11:0] $end
$var wire 1 ) reset $end
$var reg 12 0 out_Val [11:0] $end
$upscope $end
$scope module U2 $end
$var wire 12 1 address [11:0] $end
$var wire 8 2 data [7:0] $end
$upscope $end
$scope module U3 $end
$var wire 8 3 D [7:0] $end
$var wire 1 $ clk $end
$var wire 1 ' enabled $end
$var wire 1 ) reset $end
$var reg 8 4 Q [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
bx 2
bx 1
bx 0
b0 /
bx .
bx -
bx ,
bx +
b0 *
0)
0(
0'
0&
b0 %
0$
bx #
bx "
bx !
$end
#2
b0 "
b0 ,
b0 #
b0 -
b11110101 !
b11110101 +
b11110101 2
b11110101 3
b0 .
b0 0
b0 1
b0 4
1)
#3
1&
0)
#5
b1101010 !
b1101010 +
b1101010 2
b1101010 3
b1 .
b1 0
b1 1
1$
#10
0$
#15
b1111 !
b1111 +
b1111 2
b1111 3
b10 .
b10 0
b10 1
1$
#20
0$
#23
1(
b100100011 %
b100100011 *
b100100011 /
#25
b10010110 !
b10010110 +
b10010110 2
b10010110 3
b100100011 .
b100100011 0
b100100011 1
1$
#30
0$
#33
b1010 %
b1010 *
b1010 /
0(
#35
b1101001 !
b1101001 +
b1101001 2
b1101001 3
b100100100 .
b100100100 0
b100100100 1
1$
#40
0$
#43
1'
0&
#45
b1001 "
b1001 ,
b110 #
b110 -
b1101001 4
1$
#50
0$
#55
1$
#60
0$
#65
1$
#70
0$
#75
1$
#80
0$
#85
1$
#90
0$
#95
1$
#100
0$
